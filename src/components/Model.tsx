/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Ndevisuals (https://sketchfab.com/Wade23)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/cute-alien-character-42fe1c5cd5724fd6ad34c6fd56daf892
Title: Cute Alien Character
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh
    Object_6: THREE.Mesh
    Object_8: THREE.Mesh
    Object_10: THREE.Mesh
    Object_12: THREE.Mesh
    Object_14: THREE.Mesh
    Object_16: THREE.Mesh
    Object_18: THREE.Mesh
    Object_20: THREE.Mesh
    Object_22: THREE.Mesh
    Object_24: THREE.Mesh
    Object_26: THREE.Mesh
    Object_28: THREE.Mesh
    Object_30: THREE.Mesh
    Object_32: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
    ['Material.004']: THREE.MeshStandardMaterial
    ['Material.005']: THREE.MeshStandardMaterial
  }
}

// Use 'props: object' to avoid 'any' and type errors
export function Model(props: object) {
  const { nodes, materials } = useGLTF('/scene.gltf') as unknown as GLTFResult
  const group = useRef<THREE.Group>(null)
  // Add idle animation: gentle up/down jiggle and slight rotation
  useFrame(({ clock }) => {
    if (group.current) {
      const t = clock.getElapsedTime()
      group.current.position.y = -0.18 + Math.sin(t * 1.2) * 0.04
      group.current.rotation.y = Math.sin(t * 0.7) * 0.08
    }
  })
  // Fill the pet section: scale and center the model for max visibility
  return (
    <group ref={group} {...props} dispose={null} scale={[2.1, 2.1, 2.1]} position={[0, -0.18, 0]}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_4.geometry}
        material={materials['Material.001']}
        scale={0.79063249}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_6.geometry}
        material={materials['Material.003']}
        position={[0.07991788, -0.04502804, 0.24857232]}
        scale={[0.02234083, 0.0398199, 0.02897209]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_8.geometry}
        material={materials['Material.001']}
        position={[0, 0.3393057, -0.01263999]}
        rotation={[-0.20670658, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_10.geometry}
        material={materials['Material.002']}
        position={[0, 0.00005191, 0]}
        scale={0.81080741}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_12.geometry}
        material={materials['Material.004']}
        position={[0, 0.01233813, 0]}
        scale={0.77627975}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_14.geometry}
        material={materials['Material.004']}
        position={[0, -0.38046613, 0.31813797]}
        scale={[0.02433044, 0.02433044, 0.01164611]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_16.geometry}
        material={materials['Material.004']}
        position={[0, -0.46410069, 0.31813797]}
        scale={[0.02433044, 0.02433044, 0.01164611]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_18.geometry}
        material={materials['Material.002']}
        position={[0, -0.01849268, 0]}
        scale={0.79105514}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_20.geometry}
        material={materials['Material.004']}
        position={[0, -0.01426753, 0]}
        scale={0.79063249}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_22.geometry}
        material={materials['Material.004']}
        position={[0, -0.01426753, 0]}
        scale={0.79063249}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_24.geometry}
        material={materials['Material.001']}
        position={[0.52494985, -0.50285065, 0]}
        rotation={[1.86374256, -0.21722, 0.06491343]}
        scale={[0.02414034, 0.02414035, 0.02414035]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_26.geometry}
        material={materials['Material.005']}
        position={[0, -0.08649209, 0.24444646]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.02907525}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_28.geometry}
        material={materials['Material.002']}
        position={[0.37649098, -0.42351073, 0]}
        rotation={[0, 0, 1.11166486]}
        scale={0.08782548}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_30.geometry}
        material={materials['Material.002']}
        position={[0.37800127, -0.42425737, 0]}
        rotation={[0, 0, 1.11166486]}
        scale={0.08782548}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_32.geometry}
        material={materials['Material.001']}
        position={[0.01124918, 0.51056409, -0.05800791]}
        scale={0.0859784}
      />
    </group>
  )
}

useGLTF.preload('/scene.gltf')
